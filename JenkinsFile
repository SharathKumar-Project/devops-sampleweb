pipeline {
    agent { label 'Student_app_worker_node' }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/SharathKumar-Project/devops-sampleweb.git',
                        credentialsId: 'github_token' 
                    ]]
                ])
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Deploy to Artifactory') {
            steps {
                configFileProvider([configFile(fileId: '7f0fd01b-4c09-4e58-9e4e-039ffb81f61d', variable: 'MAVEN_SETTINGS')]) {
                    sh 'mvn deploy -s $MAVEN_SETTINGS'
                }
            }
        }

       stage('Download and Deploy WAR Locally') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'jfrog_pass', usernameVariable: 'ART_USER', passwordVariable: 'ART_PASS')]) {
                    script {
                        def warName = 'sample-webapp-1.1-20250622.181427-4.war'
                        def artifactUrl = "http://34.205.147.168:8081/artifactory/libs-release-local/com/example/app/1.0.0/${warName}"

                        sh """
                        echo "Downloading WAR from Artifactory"
                        curl -u $ART_USER:$ART_PASS -O "${artifactUrl}"

                        echo "Stopping Tomcat"
                        /usr/tomcat/tomcat10/bin/shutdown.sh || echo 'Tomcat may already be stopped'

                        echo "Copying WAR to Tomcat webapps"
                        cp "${warName}" /usr/tomcat/tomcat10/webapps/

                        echo "Starting Tomcat"
                        /usr/tomcat/tomcat10/bin/startup.sh
                        """
                    }
                }
            }
        }
    }
}
